import{_ as s,o as n,c as a,Q as l}from"./chunks/framework.97e1d4f2.js";const d=JSON.parse('{"title":"基本配置","description":"","frontmatter":{},"headers":[],"relativePath":"articles/project/webpack/base/config.md","filePath":"articles/project/webpack/base/config.md","lastUpdated":1694668148000}'),p={name:"articles/project/webpack/base/config.md"},e=l(`<h1 id="%E5%9F%BA%E6%9C%AC%E9%85%8D%E7%BD%AE" tabindex="-1">基本配置 <a class="header-anchor" href="#基本配置" aria-label="Permalink to &quot;基本配置&quot;">​</a></h1><p>在开始使用 <code>Webpack</code> 之前，我们需要对 <code>Webpack</code> 的配置有一定的认识。</p><h2 id="5%20%E5%A4%A7%E6%A0%B8%E5%BF%83%E6%A6%82%E5%BF%B5" tabindex="-1">5 大核心概念 <a class="header-anchor" href="#5 大核心概念" aria-label="Permalink to &quot;5 大核心概念&quot;">​</a></h2><ol><li>entry（入口）</li></ol><p>指示 Webpack 从哪个文件开始打包</p><ol start="2"><li>output（输出）</li></ol><p>指示 Webpack 打包完的文件输出到哪里去，如何命名等</p><ol start="3"><li>loader（加载器）</li></ol><p>webpack 本身只能处理 js、json 等资源，其他资源需要借助 loader，Webpack 才能解析</p><ol start="4"><li>plugins（插件）</li></ol><p>扩展 Webpack 的功能</p><ol start="5"><li>mode（模式）</li></ol><p>主要由两种模式：</p><ul><li>开发模式：development</li><li>生产模式：production</li></ul><h2 id="%E5%87%86%E5%A4%87%20Webpack%20%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6" tabindex="-1">准备 Webpack 配置文件 <a class="header-anchor" href="#准备 Webpack 配置文件" aria-label="Permalink to &quot;准备 Webpack 配置文件&quot;">​</a></h2><p>在项目根目录下新建文件：<code>webpack.config.js</code></p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki vitesse-light"><code><span class="line"><span style="color:#998418;">module</span><span style="color:#999999;">.</span><span style="color:#998418;">exports</span><span style="color:#393A34;"> </span><span style="color:#999999;">=</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span></span>
<span class="line"><span style="color:#999999;">  </span><span style="color:#A0ADA0;">// 入口</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#998418;">entry</span><span style="color:#999999;">:</span><span style="color:#393A34;"> </span><span style="color:#B5695999;">&quot;&quot;</span><span style="color:#999999;">,</span></span>
<span class="line"><span style="color:#999999;">  </span><span style="color:#A0ADA0;">// 输出</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#998418;">output</span><span style="color:#999999;">:</span><span style="color:#393A34;"> </span><span style="color:#999999;">{},</span></span>
<span class="line"><span style="color:#999999;">  </span><span style="color:#A0ADA0;">// 加载器</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#998418;">module</span><span style="color:#999999;">:</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span></span>
<span class="line"><span style="color:#393A34;">    </span><span style="color:#998418;">rules</span><span style="color:#999999;">:</span><span style="color:#393A34;"> </span><span style="color:#999999;">[],</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#999999;">},</span></span>
<span class="line"><span style="color:#999999;">  </span><span style="color:#A0ADA0;">// 插件</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#998418;">plugins</span><span style="color:#999999;">:</span><span style="color:#393A34;"> </span><span style="color:#999999;">[],</span></span>
<span class="line"><span style="color:#999999;">  </span><span style="color:#A0ADA0;">// 模式</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#998418;">mode</span><span style="color:#999999;">:</span><span style="color:#393A34;"> </span><span style="color:#B5695999;">&quot;&quot;</span><span style="color:#999999;">,</span></span>
<span class="line"><span style="color:#999999;">};</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div><p>Webpack 是基于 Node.js 运行的，所以采用 Common.js 模块化规范</p><h2 id="%E4%BF%AE%E6%94%B9%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6" tabindex="-1">修改配置文件 <a class="header-anchor" href="#修改配置文件" aria-label="Permalink to &quot;修改配置文件&quot;">​</a></h2><ol><li>配置文件</li></ol><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki vitesse-light"><code><span class="line"><span style="color:#A0ADA0;">// Node.js的核心模块，专门用来处理文件路径</span></span>
<span class="line"><span style="color:#AB5959;">const</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">path</span><span style="color:#393A34;"> </span><span style="color:#999999;">=</span><span style="color:#393A34;"> </span><span style="color:#59873A;">require</span><span style="color:#999999;">(</span><span style="color:#B5695999;">&quot;</span><span style="color:#B56959;">path</span><span style="color:#B5695999;">&quot;</span><span style="color:#999999;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#998418;">module</span><span style="color:#999999;">.</span><span style="color:#998418;">exports</span><span style="color:#393A34;"> </span><span style="color:#999999;">=</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span></span>
<span class="line"><span style="color:#999999;">  </span><span style="color:#A0ADA0;">// 入口</span></span>
<span class="line"><span style="color:#999999;">  </span><span style="color:#A0ADA0;">// 相对路径和绝对路径都行</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#998418;">entry</span><span style="color:#999999;">:</span><span style="color:#393A34;"> </span><span style="color:#B5695999;">&quot;</span><span style="color:#B56959;">./src/main.js</span><span style="color:#B5695999;">&quot;</span><span style="color:#999999;">,</span></span>
<span class="line"><span style="color:#999999;">  </span><span style="color:#A0ADA0;">// 输出</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#998418;">output</span><span style="color:#999999;">:</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span></span>
<span class="line"><span style="color:#999999;">    </span><span style="color:#A0ADA0;">// path: 文件输出目录，必须是绝对路径</span></span>
<span class="line"><span style="color:#999999;">    </span><span style="color:#A0ADA0;">// path.resolve()方法返回一个绝对路径</span></span>
<span class="line"><span style="color:#999999;">    </span><span style="color:#A0ADA0;">// __dirname 当前文件的文件夹绝对路径</span></span>
<span class="line"><span style="color:#393A34;">    </span><span style="color:#998418;">path</span><span style="color:#999999;">:</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">path</span><span style="color:#999999;">.</span><span style="color:#59873A;">resolve</span><span style="color:#999999;">(</span><span style="color:#B07D48;">__dirname</span><span style="color:#999999;">,</span><span style="color:#393A34;"> </span><span style="color:#B5695999;">&quot;</span><span style="color:#B56959;">dist</span><span style="color:#B5695999;">&quot;</span><span style="color:#999999;">),</span></span>
<span class="line"><span style="color:#999999;">    </span><span style="color:#A0ADA0;">// filename: 输出文件名</span></span>
<span class="line"><span style="color:#393A34;">    </span><span style="color:#998418;">filename</span><span style="color:#999999;">:</span><span style="color:#393A34;"> </span><span style="color:#B5695999;">&quot;</span><span style="color:#B56959;">main.js</span><span style="color:#B5695999;">&quot;</span><span style="color:#999999;">,</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#999999;">},</span></span>
<span class="line"><span style="color:#999999;">  </span><span style="color:#A0ADA0;">// 加载器</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#998418;">module</span><span style="color:#999999;">:</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span></span>
<span class="line"><span style="color:#393A34;">    </span><span style="color:#998418;">rules</span><span style="color:#999999;">:</span><span style="color:#393A34;"> </span><span style="color:#999999;">[],</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#999999;">},</span></span>
<span class="line"><span style="color:#999999;">  </span><span style="color:#A0ADA0;">// 插件</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#998418;">plugins</span><span style="color:#999999;">:</span><span style="color:#393A34;"> </span><span style="color:#999999;">[],</span></span>
<span class="line"><span style="color:#999999;">  </span><span style="color:#A0ADA0;">// 模式</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#998418;">mode</span><span style="color:#999999;">:</span><span style="color:#393A34;"> </span><span style="color:#B5695999;">&quot;</span><span style="color:#B56959;">development</span><span style="color:#B5695999;">&quot;</span><span style="color:#999999;">,</span><span style="color:#393A34;"> </span><span style="color:#A0ADA0;">// 开发模式</span></span>
<span class="line"><span style="color:#999999;">};</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br></div></div><ol start="2"><li>运行指令</li></ol><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki vitesse-light"><code><span class="line"><span style="color:#393a34;">npx webpack</span></span></code></pre></div><p>此时功能和之前一样，也不能处理样式资源</p><h2 id="%E5%B0%8F%E7%BB%93" tabindex="-1">小结 <a class="header-anchor" href="#小结" aria-label="Permalink to &quot;小结&quot;">​</a></h2><p>Webpack 将来都通过 <code>webpack.config.js</code> 文件进行配置，来增强 Webpack 的功能</p><p>我们后面会以两个模式来分别搭建 Webpack 的配置，先进行开发模式，再完成生产模式</p>`,27),o=[e];function c(r,t,i,y,b,A){return n(),a("div",null,o)}const m=s(p,[["render",c]]);export{d as __pageData,m as default};
