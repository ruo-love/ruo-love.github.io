import{_ as s,o as a,c as n,Q as l}from"./chunks/framework.a944d67c.js";const b=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"works/vuehooks/index.md","filePath":"works/vuehooks/index.md","lastUpdated":1699323205000}'),e={name:"works/vuehooks/index.md"},p=l(`<h4 id="useValid" tabindex="-1"><code>useValid</code> <a class="header-anchor" href="#useValid" aria-label="Permalink to &quot;\`useValid\`&quot;">​</a></h4><h5 id="Description" tabindex="-1">Description <a class="header-anchor" href="#Description" aria-label="Permalink to &quot;Description&quot;">​</a></h5><p>The <code>useValid</code> function is used for form validation and supports various validation rules, including <code>required</code>, <code>pattern</code>, and custom validators. It allows you to validate form fields and provides methods to trigger individual and all validations.</p><h5 id="Usage" tabindex="-1">Usage <a class="header-anchor" href="#Usage" aria-label="Permalink to &quot;Usage&quot;">​</a></h5><h6 id="Parameters" tabindex="-1">Parameters <a class="header-anchor" href="#Parameters" aria-label="Permalink to &quot;Parameters&quot;">​</a></h6><ul><li><p><code>rules</code> (type: <code>Rules</code>): An object containing the validation rules for form fields.</p><p>Example:</p><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki vitesse-light"><code><span class="line"><span style="color:#999999;">{</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#59873A;">name</span><span style="color:#999999;">:</span><span style="color:#393A34;"> </span><span style="color:#999999;">[{</span><span style="color:#393A34;"> </span><span style="color:#998418;">required</span><span style="color:#999999;">:</span><span style="color:#393A34;"> </span><span style="color:#1E754F;">true</span><span style="color:#999999;">,</span><span style="color:#393A34;"> </span><span style="color:#998418;">message</span><span style="color:#999999;">:</span><span style="color:#393A34;"> </span><span style="color:#B5695999;">&#39;</span><span style="color:#B56959;">Please enter a name</span><span style="color:#B5695999;">&#39;</span><span style="color:#393A34;"> </span><span style="color:#999999;">}],</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#59873A;">age</span><span style="color:#999999;">:</span><span style="color:#393A34;"> </span><span style="color:#999999;">[{</span><span style="color:#393A34;"> </span><span style="color:#998418;">required</span><span style="color:#999999;">:</span><span style="color:#393A34;"> </span><span style="color:#1E754F;">true</span><span style="color:#999999;">,</span><span style="color:#393A34;"> </span><span style="color:#998418;">message</span><span style="color:#999999;">:</span><span style="color:#393A34;"> </span><span style="color:#B5695999;">&#39;</span><span style="color:#B56959;">Please enter an age</span><span style="color:#B5695999;">&#39;</span><span style="color:#393A34;"> </span><span style="color:#999999;">}],</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#59873A;">phone</span><span style="color:#999999;">:</span><span style="color:#393A34;"> </span><span style="color:#999999;">[</span></span>
<span class="line"><span style="color:#393A34;">    </span><span style="color:#999999;">{</span><span style="color:#393A34;"> </span><span style="color:#998418;">required</span><span style="color:#999999;">:</span><span style="color:#393A34;"> </span><span style="color:#1E754F;">true</span><span style="color:#999999;">,</span><span style="color:#393A34;"> </span><span style="color:#998418;">message</span><span style="color:#999999;">:</span><span style="color:#393A34;"> </span><span style="color:#B5695999;">&#39;</span><span style="color:#B56959;">Please enter a phone number</span><span style="color:#B5695999;">&#39;</span><span style="color:#393A34;"> </span><span style="color:#999999;">},</span></span>
<span class="line"><span style="color:#393A34;">    </span><span style="color:#999999;">{</span><span style="color:#393A34;"> </span><span style="color:#998418;">pattern</span><span style="color:#999999;">:</span><span style="color:#AB5E3F;"> </span><span style="color:#B5695999;">/</span><span style="color:#1E754F;">^</span><span style="color:#AB5E3F;">1</span><span style="color:#A65E2B;">\\d</span><span style="color:#AB5959;">{10}</span><span style="color:#1E754F;">$</span><span style="color:#B5695999;">/</span><span style="color:#999999;">,</span><span style="color:#393A34;"> </span><span style="color:#998418;">message</span><span style="color:#999999;">:</span><span style="color:#393A34;"> </span><span style="color:#B5695999;">&#39;</span><span style="color:#B56959;">Please enter a valid phone number</span><span style="color:#B5695999;">&#39;</span><span style="color:#393A34;"> </span><span style="color:#999999;">}</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#999999;">],</span></span>
<span class="line"><span style="color:#999999;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div></li></ul><h6 id="Return%20Value" tabindex="-1">Return Value <a class="header-anchor" href="#Return Value" aria-label="Permalink to &quot;Return Value&quot;">​</a></h6><p>The function returns an array containing three elements:</p><ol><li><p>validResult (type: IValidResult): An object that stores the validation results for each form field.</p></li><li><p>triggerValidProp (type: triggerValidProp): A function used to trigger validation for a specific form field.</p></li><li><p>triggerValidAll (type: triggerValidAll): A function used to trigger validation for all form fields.</p></li></ol><h6 id="Example" tabindex="-1">Example <a class="header-anchor" href="#Example" aria-label="Permalink to &quot;Example&quot;">​</a></h6><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki vitesse-light"><code><span class="line"><span style="color:#AB5959;">const</span><span style="color:#393A34;"> </span><span style="color:#999999;">[</span><span style="color:#B07D48;">validResult</span><span style="color:#999999;">,</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">triggerValidProp</span><span style="color:#999999;">,</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">triggerValidAll</span><span style="color:#999999;">]</span><span style="color:#393A34;"> </span><span style="color:#999999;">=</span><span style="color:#393A34;"> </span><span style="color:#59873A;">useValid</span><span style="color:#999999;">({</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#998418;">name</span><span style="color:#999999;">:</span><span style="color:#393A34;"> </span><span style="color:#999999;">[{</span><span style="color:#393A34;"> </span><span style="color:#998418;">required</span><span style="color:#999999;">:</span><span style="color:#393A34;"> </span><span style="color:#1E754F;">true</span><span style="color:#999999;">,</span><span style="color:#393A34;"> </span><span style="color:#998418;">message</span><span style="color:#999999;">:</span><span style="color:#393A34;"> </span><span style="color:#B5695999;">&quot;</span><span style="color:#B56959;">Please enter a name</span><span style="color:#B5695999;">&quot;</span><span style="color:#393A34;"> </span><span style="color:#999999;">}],</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#998418;">age</span><span style="color:#999999;">:</span><span style="color:#393A34;"> </span><span style="color:#999999;">[{</span><span style="color:#393A34;"> </span><span style="color:#998418;">required</span><span style="color:#999999;">:</span><span style="color:#393A34;"> </span><span style="color:#1E754F;">true</span><span style="color:#999999;">,</span><span style="color:#393A34;"> </span><span style="color:#998418;">message</span><span style="color:#999999;">:</span><span style="color:#393A34;"> </span><span style="color:#B5695999;">&quot;</span><span style="color:#B56959;">Please enter an age</span><span style="color:#B5695999;">&quot;</span><span style="color:#393A34;"> </span><span style="color:#999999;">}],</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#998418;">phone</span><span style="color:#999999;">:</span><span style="color:#393A34;"> </span><span style="color:#999999;">[</span></span>
<span class="line"><span style="color:#393A34;">    </span><span style="color:#999999;">{</span><span style="color:#393A34;"> </span><span style="color:#998418;">required</span><span style="color:#999999;">:</span><span style="color:#393A34;"> </span><span style="color:#1E754F;">true</span><span style="color:#999999;">,</span><span style="color:#393A34;"> </span><span style="color:#998418;">message</span><span style="color:#999999;">:</span><span style="color:#393A34;"> </span><span style="color:#B5695999;">&quot;</span><span style="color:#B56959;">Please enter a phone number</span><span style="color:#B5695999;">&quot;</span><span style="color:#393A34;"> </span><span style="color:#999999;">},</span></span>
<span class="line"><span style="color:#393A34;">    </span><span style="color:#999999;">{</span><span style="color:#393A34;"> </span><span style="color:#998418;">pattern</span><span style="color:#999999;">:</span><span style="color:#AB5E3F;"> </span><span style="color:#B5695999;">/</span><span style="color:#1E754F;">^</span><span style="color:#AB5E3F;">1</span><span style="color:#A65E2B;">\\d</span><span style="color:#AB5959;">{10}</span><span style="color:#1E754F;">$</span><span style="color:#B5695999;">/</span><span style="color:#999999;">,</span><span style="color:#393A34;"> </span><span style="color:#998418;">message</span><span style="color:#999999;">:</span><span style="color:#393A34;"> </span><span style="color:#B5695999;">&quot;</span><span style="color:#B56959;">Please enter a valid phone number</span><span style="color:#B5695999;">&quot;</span><span style="color:#393A34;"> </span><span style="color:#999999;">},</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#999999;">],</span></span>
<span class="line"><span style="color:#999999;">});</span></span>
<span class="line"></span>
<span class="line"><span style="color:#59873A;">triggerValidProp</span><span style="color:#999999;">(</span><span style="color:#B5695999;">&quot;</span><span style="color:#B56959;">name</span><span style="color:#B5695999;">&quot;</span><span style="color:#999999;">,</span><span style="color:#393A34;"> </span><span style="color:#B5695999;">&quot;&quot;</span><span style="color:#999999;">);</span><span style="color:#393A34;"> </span><span style="color:#A0ADA0;">// { prop: &#39;name&#39;, valid: false, message: &#39;Please enter a name&#39; }</span></span>
<span class="line"><span style="color:#59873A;">triggerValidProp</span><span style="color:#999999;">(</span><span style="color:#B5695999;">&quot;</span><span style="color:#B56959;">name</span><span style="color:#B5695999;">&quot;</span><span style="color:#999999;">,</span><span style="color:#393A34;"> </span><span style="color:#B5695999;">&quot;</span><span style="color:#B56959;">John Doe</span><span style="color:#B5695999;">&quot;</span><span style="color:#999999;">);</span><span style="color:#393A34;"> </span><span style="color:#A0ADA0;">// { prop: &#39;name&#39;, valid: true, message: &#39;Validation passed&#39; }</span></span>
<span class="line"><span style="color:#59873A;">triggerValidAll</span><span style="color:#999999;">({</span><span style="color:#393A34;"> </span><span style="color:#998418;">name</span><span style="color:#999999;">:</span><span style="color:#393A34;"> </span><span style="color:#B5695999;">&quot;</span><span style="color:#B56959;">John Doe</span><span style="color:#B5695999;">&quot;</span><span style="color:#999999;">,</span><span style="color:#393A34;"> </span><span style="color:#998418;">age</span><span style="color:#999999;">:</span><span style="color:#393A34;"> </span><span style="color:#2F798A;">25</span><span style="color:#999999;">,</span><span style="color:#393A34;"> </span><span style="color:#998418;">phone</span><span style="color:#999999;">:</span><span style="color:#393A34;"> </span><span style="color:#B5695999;">&quot;</span><span style="color:#B56959;">12345678901</span><span style="color:#B5695999;">&quot;</span><span style="color:#393A34;"> </span><span style="color:#999999;">});</span></span>
<span class="line"><span style="color:#A0ADA0;">// Returns: [true, [{ prop: &#39;name&#39;, valid: true, message: &#39;Validation passed&#39; },</span></span>
<span class="line"><span style="color:#A0ADA0;">//                 { prop: &#39;age&#39;, valid: true, message: &#39;Validation passed&#39; },</span></span>
<span class="line"><span style="color:#A0ADA0;">//                 { prop: &#39;phone&#39;, valid: false, message: &#39;Please enter a valid phone number&#39; }]]</span></span>
<span class="line"></span>
<span class="line"><span style="color:#B07D48;">console</span><span style="color:#999999;">.</span><span style="color:#59873A;">log</span><span style="color:#999999;">(</span><span style="color:#B07D48;">validResult</span><span style="color:#999999;">);</span></span>
<span class="line"><span style="color:#A0ADA0;">// Returns:</span></span>
<span class="line"><span style="color:#A0ADA0;">// {</span></span>
<span class="line"><span style="color:#A0ADA0;">//   name: { prop: &#39;name&#39;, valid: true, message: &#39;Validation passed&#39; },</span></span>
<span class="line"><span style="color:#A0ADA0;">//   age: { prop: &#39;age&#39;, valid: true, message: &#39;Validation passed&#39; },</span></span>
<span class="line"><span style="color:#A0ADA0;">//   phone: { prop: &#39;phone&#39;, valid: false, message: &#39;Please enter a valid phone number&#39; }</span></span>
<span class="line"><span style="color:#A0ADA0;">// }</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br></div></div><h4 id="useViewSize" tabindex="-1"><code>useViewSize</code> <a class="header-anchor" href="#useViewSize" aria-label="Permalink to &quot;\`useViewSize\`&quot;">​</a></h4><h5 id="Description-1" tabindex="-1">Description <a class="header-anchor" href="#Description-1" aria-label="Permalink to &quot;Description&quot;">​</a></h5><p>The <code>useViewSize</code> function is a Vue 3 Composition API function designed to provide reactive information about the current viewport size. It also offers a computed property to determine the size type based on a configuration object.</p><h5 id="Usage-1" tabindex="-1">Usage <a class="header-anchor" href="#Usage-1" aria-label="Permalink to &quot;Usage&quot;">​</a></h5><h6 id="Parameters-1" tabindex="-1">Parameters <a class="header-anchor" href="#Parameters-1" aria-label="Permalink to &quot;Parameters&quot;">​</a></h6><ul><li><p><code>config</code> (type: <code>IConfig</code>, optional): An object that defines custom breakpoints and their corresponding numerical values. If not provided, it uses default breakpoints.</p><p>Default Configuration:</p><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki vitesse-light"><code><span class="line"><span style="color:#999999;">{</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#59873A;">xm</span><span style="color:#999999;">:</span><span style="color:#393A34;"> </span><span style="color:#2F798A;">520</span><span style="color:#999999;">,</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#59873A;">sm</span><span style="color:#999999;">:</span><span style="color:#393A34;"> </span><span style="color:#2F798A;">640</span><span style="color:#999999;">,</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#59873A;">md</span><span style="color:#999999;">:</span><span style="color:#393A34;"> </span><span style="color:#2F798A;">768</span><span style="color:#999999;">,</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#59873A;">mxd</span><span style="color:#999999;">:</span><span style="color:#393A34;"> </span><span style="color:#2F798A;">821</span><span style="color:#999999;">,</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#59873A;">lg</span><span style="color:#999999;">:</span><span style="color:#393A34;"> </span><span style="color:#2F798A;">1024</span><span style="color:#999999;">,</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#59873A;">xl</span><span style="color:#999999;">:</span><span style="color:#393A34;"> </span><span style="color:#2F798A;">1280</span><span style="color:#999999;">,</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#B5695999;">&quot;</span><span style="color:#B56959;">2xl</span><span style="color:#B5695999;">&quot;</span><span style="color:#393A34;">: </span><span style="color:#2F798A;">1536</span><span style="color:#999999;">,</span></span>
<span class="line"><span style="color:#999999;">};</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div></li></ul><h6 id="Return%20Value-1" tabindex="-1">Return Value <a class="header-anchor" href="#Return Value-1" aria-label="Permalink to &quot;Return Value&quot;">​</a></h6><p>The function returns an array containing two elements:</p><ol><li><p>sizeType (type: ComputedRef&lt;string&gt;): A computed property that determines the current viewport size type based on the provided or default configuration.</p></li><li><p>size (type: { width: number; height: number }): A reactive object that provides the current viewport&#39;s width and height.</p></li></ol><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki vitesse-light"><code><span class="line"><span style="color:#1E754F;">import</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">ref</span><span style="color:#999999;">,</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">onBeforeUnmount</span><span style="color:#393A34;"> </span><span style="color:#999999;">}</span><span style="color:#393A34;"> </span><span style="color:#1E754F;">from</span><span style="color:#393A34;"> </span><span style="color:#B5695999;">&quot;</span><span style="color:#B56959;">vue</span><span style="color:#B5695999;">&quot;</span><span style="color:#999999;">;</span></span>
<span class="line"><span style="color:#1E754F;">import</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">useViewSize</span><span style="color:#393A34;"> </span><span style="color:#999999;">}</span><span style="color:#393A34;"> </span><span style="color:#1E754F;">from</span><span style="color:#393A34;"> </span><span style="color:#B5695999;">&quot;</span><span style="color:#B56959;">./useViewSize</span><span style="color:#B5695999;">&quot;</span><span style="color:#999999;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A0ADA0;">// Define custom breakpoints</span></span>
<span class="line"><span style="color:#AB5959;">const</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">customConfig</span><span style="color:#393A34;"> </span><span style="color:#999999;">=</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#998418;">xs</span><span style="color:#999999;">:</span><span style="color:#393A34;"> </span><span style="color:#2F798A;">400</span><span style="color:#999999;">,</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#998418;">sm</span><span style="color:#999999;">:</span><span style="color:#393A34;"> </span><span style="color:#2F798A;">600</span><span style="color:#999999;">,</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#998418;">md</span><span style="color:#999999;">:</span><span style="color:#393A34;"> </span><span style="color:#2F798A;">900</span><span style="color:#999999;">,</span></span>
<span class="line"><span style="color:#999999;">};</span></span>
<span class="line"></span>
<span class="line"><span style="color:#AB5959;">const</span><span style="color:#393A34;"> </span><span style="color:#999999;">[</span><span style="color:#B07D48;">sizeType</span><span style="color:#999999;">,</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">size</span><span style="color:#999999;">]</span><span style="color:#393A34;"> </span><span style="color:#999999;">=</span><span style="color:#393A34;"> </span><span style="color:#59873A;">useViewSize</span><span style="color:#999999;">(</span><span style="color:#B07D48;">customConfig</span><span style="color:#999999;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A0ADA0;">// Access the computed size type</span></span>
<span class="line"><span style="color:#B07D48;">console</span><span style="color:#999999;">.</span><span style="color:#59873A;">log</span><span style="color:#999999;">(</span><span style="color:#B07D48;">sizeType</span><span style="color:#999999;">.</span><span style="color:#B07D48;">value</span><span style="color:#999999;">);</span><span style="color:#393A34;"> </span><span style="color:#A0ADA0;">// e.g., &quot;md&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A0ADA0;">// Access the reactive size object</span></span>
<span class="line"><span style="color:#B07D48;">console</span><span style="color:#999999;">.</span><span style="color:#59873A;">log</span><span style="color:#999999;">(</span><span style="color:#B07D48;">size</span><span style="color:#999999;">.</span><span style="color:#B07D48;">width</span><span style="color:#999999;">);</span><span style="color:#393A34;"> </span><span style="color:#A0ADA0;">// Current viewport width</span></span>
<span class="line"><span style="color:#B07D48;">console</span><span style="color:#999999;">.</span><span style="color:#59873A;">log</span><span style="color:#999999;">(</span><span style="color:#B07D48;">size</span><span style="color:#999999;">.</span><span style="color:#B07D48;">height</span><span style="color:#999999;">);</span><span style="color:#393A34;"> </span><span style="color:#A0ADA0;">// Current viewport height</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A0ADA0;">// Cleanup event listener on component unmount</span></span>
<span class="line"><span style="color:#59873A;">onBeforeUnmount</span><span style="color:#999999;">(()</span><span style="color:#393A34;"> </span><span style="color:#999999;">=&gt;</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span></span>
<span class="line"><span style="color:#999999;">  </span><span style="color:#A0ADA0;">// Remove the event listener</span></span>
<span class="line"><span style="color:#999999;">  </span><span style="color:#A0ADA0;">// You may need to do this depending on your Vue component structure</span></span>
<span class="line"><span style="color:#999999;">});</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br></div></div><h4 id="useToggle" tabindex="-1"><code>useToggle</code> <a class="header-anchor" href="#useToggle" aria-label="Permalink to &quot;\`useToggle\`&quot;">​</a></h4><h4 id="Description-2" tabindex="-1">Description <a class="header-anchor" href="#Description-2" aria-label="Permalink to &quot;Description&quot;">​</a></h4><p>The <code>useToggle</code> function is a Vue 3 Composition API function used for toggling between two values. It allows you to easily switch between two provided values and provides a function to trigger the toggle action.</p><h5 id="Usage-2" tabindex="-1">Usage <a class="header-anchor" href="#Usage-2" aria-label="Permalink to &quot;Usage&quot;">​</a></h5><h6 id="Parameters-2" tabindex="-1">Parameters <a class="header-anchor" href="#Parameters-2" aria-label="Permalink to &quot;Parameters&quot;">​</a></h6><ul><li><code>values</code> (type: <code>[T, T]</code>): An array containing the two values between which you want to toggle.</li></ul><h6 id="Return%20Value-2" tabindex="-1">Return Value <a class="header-anchor" href="#Return Value-2" aria-label="Permalink to &quot;Return Value&quot;">​</a></h6><p>The function returns an array containing two elements:</p><ol><li><p><code>active</code> (type: <code>Ref&lt;T&gt;</code>): A reactive reference that represents the current active value.</p></li><li><p><code>toggle</code> (type: <code>(value?: T) =&gt; void</code>): A function that is used to toggle between the two values. If a specific value is provided as an argument, it sets that value as the new active value.</p></li></ol><h6 id="Example-1" tabindex="-1">Example <a class="header-anchor" href="#Example-1" aria-label="Permalink to &quot;Example&quot;">​</a></h6><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki vitesse-light"><code><span class="line"><span style="color:#1E754F;">import</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">ref</span><span style="color:#393A34;"> </span><span style="color:#999999;">}</span><span style="color:#393A34;"> </span><span style="color:#1E754F;">from</span><span style="color:#393A34;"> </span><span style="color:#B5695999;">&quot;</span><span style="color:#B56959;">vue</span><span style="color:#B5695999;">&quot;</span><span style="color:#999999;">;</span></span>
<span class="line"><span style="color:#1E754F;">import</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">useToggle</span><span style="color:#393A34;"> </span><span style="color:#999999;">}</span><span style="color:#393A34;"> </span><span style="color:#1E754F;">from</span><span style="color:#393A34;"> </span><span style="color:#B5695999;">&quot;</span><span style="color:#B56959;">./useToggle</span><span style="color:#B5695999;">&quot;</span><span style="color:#999999;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#AB5959;">const</span><span style="color:#393A34;"> </span><span style="color:#999999;">[</span><span style="color:#B07D48;">active</span><span style="color:#999999;">,</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">toggle</span><span style="color:#999999;">]</span><span style="color:#393A34;"> </span><span style="color:#999999;">=</span><span style="color:#393A34;"> </span><span style="color:#59873A;">useToggle</span><span style="color:#999999;">([</span><span style="color:#2F798A;">1</span><span style="color:#999999;">,</span><span style="color:#393A34;"> </span><span style="color:#2F798A;">2</span><span style="color:#999999;">]);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A0ADA0;">// Toggle between the two values</span></span>
<span class="line"><span style="color:#59873A;">toggle</span><span style="color:#999999;">();</span><span style="color:#393A34;"> </span><span style="color:#A0ADA0;">// active.value = 2 (initially set to the first value, toggles to the second value)</span></span>
<span class="line"><span style="color:#59873A;">toggle</span><span style="color:#999999;">();</span><span style="color:#393A34;"> </span><span style="color:#A0ADA0;">// active.value = 1 (toggles back to the first value)</span></span>
<span class="line"><span style="color:#59873A;">toggle</span><span style="color:#999999;">(</span><span style="color:#2F798A;">2</span><span style="color:#999999;">);</span><span style="color:#393A34;"> </span><span style="color:#A0ADA0;">// active.value = 2 (sets the active value to the second value)</span></span>
<span class="line"><span style="color:#59873A;">toggle</span><span style="color:#999999;">(</span><span style="color:#2F798A;">1</span><span style="color:#999999;">);</span><span style="color:#393A34;"> </span><span style="color:#A0ADA0;">// active.value = 1 (sets the active value to the first value)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A0ADA0;">// Access the current active value</span></span>
<span class="line"><span style="color:#B07D48;">console</span><span style="color:#999999;">.</span><span style="color:#59873A;">log</span><span style="color:#999999;">(</span><span style="color:#B07D48;">active</span><span style="color:#999999;">.</span><span style="color:#B07D48;">value</span><span style="color:#999999;">);</span><span style="color:#393A34;"> </span><span style="color:#A0ADA0;">// The current active value (either 1 or 2)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div>`,32),o=[p];function r(t,c,i,y,u,A){return a(),n("div",null,o)}const m=s(e,[["render",r]]);export{b as __pageData,m as default};
